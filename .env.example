# Copy this file to .env.local and fill in your secrets.
# DO NOT COMMIT .env.local to your repository.

# Auth.js / NextAuth.js
# ========================
# You can generate a secret with `openssl rand -hex 32`
AUTH_SECRET="your-super-secret-auth-secret"

# This must be the full public URL of your application.
# For local dev on port 9002, it would be http://localhost:9002
# For production, it would be https://your-app-name.web.app
NEXTAUTH_URL="http://localhost:9002"

# Azure AD Credentials
# Create an App Registration in your Azure Active Directory to get these values.
# The Redirect URI in Azure AD should be NEXTAUTH_URL + /api/auth/callback/azure-ad
AUTH_AZURE_AD_CLIENT_ID=""
AUTH_AZURE_AD_CLIENT_SECRET=""
AUTH_AZURE_AD_TENANT_ID=""

# Stub Authentication for Local UI Development
# Set this to "true" in your .env.local to bypass Azure AD and use a mock user.
# Any other value will use the real Azure AD flow.
NEXT_PUBLIC_STUB_AUTH="false"


# Firebase Client SDK
# ========================
# These are safe to be public and are used for client-side Firebase access.
NEXT_PUBLIC_FIREBASE_API_KEY=""
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=""
NEXT_PUBLIC_FIREBASE_PROJECT_ID=""
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=""
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=""
NEXT_PUBLIC_FIREBASE_APP_ID=""

# Firebase Admin SDK
# ========================
# This is a secret and should only be in .env.local or your hosting environment variables.
# It is the base64 encoded string of your service account JSON key.
# To generate: base64 -i path/to/your/serviceAccountKey.json | tr -d '\n'
FIREBASE_SERVICE_ACCOUNT_KEY_BASE64=""
